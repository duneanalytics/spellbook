# .github/workflows/app.yaml
name: dbt slim ci
on:
  push:
    paths:
      - 'spellbook/**'

jobs:
  dbt-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
          cache: 'pipenv'

      - name: Cache pipenv virtualenv
        id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install

      - name: DBT configure
        working-directory: ./spellbook
        continue-on-error: true
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_HTTPS_PATH: ${{ secrets.DATABRICKS_HTTPS_PATH }}
          DATABRICKS_ACCESS_TOKEN: ${{ secrets.DATABRICKS_ACCESS_TOKEN }}
          SCHEMA: "github_actions"
        run: |
          echo "2
          $DATABRICKS_HOST
          $DATABRICKS_HTTPS_PATH
          $DATABRICKS_ACCESS_TOKEN
          $SCHEMA
          1" | pipenv run dbt init

      - name: DBT configure take 2 (sometimes dbt init switches the order of db options)
        continue-on-error: true
        working-directory: ./spellbook
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_HTTPS_PATH: ${{ secrets.DATABRICKS_HTTPS_PATH }}
          DATABRICKS_ACCESS_TOKEN: ${{ secrets.DATABRICKS_ACCESS_TOKEN }}
          SCHEMA: "github_actions"
        run: |
          echo "1
          $DATABRICKS_HOST
          $DATABRICKS_HTTPS_PATH
          $DATABRICKS_ACCESS_TOKEN
          $SCHEMA
          1" | pipenv run dbt init

      - name: Fetch latest run_id
        uses: JamesIves/fetch-api-data-action@v2.1.0
        with:
          endpoint: https://cloud.getdbt.com/api/v2/accounts/58579/runs/?job_definition_id=81672&order_by=-finished_at&limit=2
          configuration: '{ "method": "GET", 
                            "headers": {"Authorization": "Token ${{ secrets.DBT_API_TOKEN }}"} }'
          debug: true

      - name: Set env, 2nd to last run_id (avoids fetching in progress runs)
        run: echo "dbt_run_id=$(jq .data[1].id fetch-api-data-action/data.json)" >> $GITHUB_ENV

      - name: Fetch latest manifest.json
        run: |
          curl  -o spellbook/manifest.json \
            --request GET \
            --url https://cloud.getdbt.com/api/v2/accounts/58579/runs/62469111/artifacts/manifest.json \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Token ${{ secrets.DBT_API_TOKEN }}'

      - name: dbt compile to create manifest to compare to
        working-directory: ./spellbook
        run: "pipenv run dbt compile"

      - name: DBT seed
        working-directory: ./spellbook
        run: "pipenv run dbt seed --select state:modified --state ."

      - name: DBT run
        working-directory: ./spellbook
        run: "pipenv run dbt run --select state:modified --state ."

      - name: DBT test
        working-directory: ./spellbook
        run: "pipenv run dbt test --select state:new state:modified --state ."
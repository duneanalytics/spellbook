# .github/workflows/app.yaml
name: dbt slim ci
on: push
#on:
#  push:
#    paths:
#      - 'spellbook/**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Add remote
        run: git remote add dot2dotseurat https://github.com/dot2dotseurat/abstractions

      - name: Fetch remote
        run: git fetch dot2dotseurat

      - name: Check out code
        run: git checkout -b dot2dotseurat_branch dot2dotseurat/master

      - name: check repository
        run: echo 'Hi ${{ github.repository }}'

      - name: check repository url
        run: echo 'Hi ${{ github.repositoryUrl }}'

      - name: check ref
        run: echo 'Hi ${{ github.ref }}'

      - name: Set up Python 3.8.12
        uses: actions/setup-python@v1
        with:
          python-version: 3.8.12
          cache: 'pipenv'

      - name: Cache pipenv virtualenv
        id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install

      - name: DBT configure
        working-directory: ./spellbook
        continue-on-error: true
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_HTTPS_PATH: ${{ secrets.DATABRICKS_HTTPS_PATH }}
          DATABRICKS_ACCESS_TOKEN: ${{ secrets.DATABRICKS_ACCESS_TOKEN }}
          SCHEMA: "github_actions"
        run: |
          echo "2
          $DATABRICKS_HOST
          $DATABRICKS_HTTPS_PATH
          $DATABRICKS_ACCESS_TOKEN
          $SCHEMA
          1" | pipenv run dbt init

      - name: DBT configure take 2
        continue-on-error: true
        working-directory: ./spellbook
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_HTTPS_PATH: ${{ secrets.DATABRICKS_HTTPS_PATH }}
          DATABRICKS_ACCESS_TOKEN: ${{ secrets.DATABRICKS_ACCESS_TOKEN }}
          SCHEMA: "github_actions"
        run: |
          echo "1
          $DATABRICKS_HOST
          $DATABRICKS_HTTPS_PATH
          $DATABRICKS_ACCESS_TOKEN
          $SCHEMA
          1" | pipenv run dbt init

      - name: DBT test configuration
        working-directory: ./spellbook
        run: "pipenv run dbt debug"

      - name: Fetch latest run_id
        uses: JamesIves/fetch-api-data-action@v2.1.0
        with:
          endpoint: https://cloud.getdbt.com/api/v2/accounts/58579/runs/
          configuration: '{ "method": "GET", 
                            "headers": {"Authorization": "Token ${{ secrets.DBT_API_TOKEN }}"},
                            "params": {"job_definition_id": 81672, "order_by":"-finished_at", "limit":1}}'
          set-output: LAST_RUN

      - name: Set env, last run_id
        run: echo "RUN_ID=$LAST_RUN["run_id"] >> $RUN_ID

      - name: Fetch latest manifest.json
        uses: JamesIves/fetch-api-data-action@v2.1.0
        with:
          endpoint: https://cloud.getdbt.com/api/v2/accounts/58579/runs/$RUN_ID/artifacts/manifest.json
          configuration: '{ "method": "GET", "headers": {"Authorization": "Token ${{ secrets.DBT_API_TOKEN }}"} }'
          save-location: "target/manifest.json"

      - name: DBT seed
        working-directory: ./spellbook
        run: "pipenv run dbt seed --select state:modified"

      - name: DBT seed
        working-directory: ./spellbook
        run: "pipenv run dbt run --select state:modified"

      - name: DBT test
        working-directory: ./spellbook
        run: "pipenv run dbt test --select state:new state:modified"
WITH test_data AS (
    SELECT boc, CAST(expected AS ROW(value1 UINT256, value2 UINT256, value3 UINT256, value4 UINT256)) AS expected, offset
    FROM (
        VALUES
        -- all zeroes
        (
            0xb5ee9c720101010100040000040000,
            ROW(CAST(0 AS UINT256), CAST(0 AS UINT256), CAST(0 AS UINT256), CAST(0 AS UINT256)),
            0
        ),
        -- all zeroes plus offset 1 bit
        (
            0xb5ee9c72010101010005000005800040,
            ROW(CAST(0 AS UINT256), CAST(0 AS UINT256), CAST(0 AS UINT256), CAST(0 AS UINT256)),
            1
        ),
        -- const value
        (
            0xb5ee9c7201010101000800000c105105105105,
            ROW(CAST(5 AS UINT256), CAST(5 AS UINT256), CAST(5 AS UINT256), CAST(5 AS UINT256)),
            0
        ),
        -- 1,2,3,4
        (
            0xb5ee9c7201010101000800000c101102103104,
            ROW(CAST(1 AS UINT256), CAST(2 AS UINT256), CAST(3 AS UINT256), CAST(4 AS UINT256)),
            0
        ),
        -- max value: 2^120 - 1
        (
            0xb5ee9c7201010101004000007cf800000000000000000000000000000f800000000000000000000000000000f800000000000000000000000000000f800000000000000000000000000000,
            ROW(CAST('664613997892457936451903530140172288' AS UINT256), CAST('664613997892457936451903530140172288' AS UINT256), CAST('664613997892457936451903530140172288' AS UINT256), CAST('664613997892457936451903530140172288' AS UINT256)),
            0
        ),
        -- random values
        (
            0xb5ee9c7201010101004000007cf1c3e18ffde6f85600d4786b26c3aa0f3af373603c6d67ba628083f29ce588f141e4a3782c332c29d3117714d0e1ef76e20518a126ff7caa83f199cedece,
            ROW(CAST('146643802097887598924508253628676768' AS UINT256), CAST('306090984351009642184326301156697480' AS UINT256), CAST('104460289522589852792972896700796446' AS UINT256), CAST('617275257640808964503560882769288910' AS UINT256)),
            0
        ),
        -- random values with offset 1 bit  
        (
            0xb5ee9c7201010101004100007df8e1f0c7fef37c2b006a3c359361d5079d79b9b01e36b3dd314041f94e72c478a0f251bc16199614e988bb8a6870f7bb71028c50937fbe5541f8cce76f6740,
            ROW(CAST('146643802097887598924508253628676768' AS UINT256), CAST('306090984351009642184326301156697480' AS UINT256), CAST('104460289522589852792972896700796446' AS UINT256), CAST('617275257640808964503560882769288910' AS UINT256)),
            1
        ),
        -- random values with offset 2 bit  
        (
            0xb5ee9c7201010101004100007d7c70f863ff79be1580351e1ac9b0ea83cebcdcd80f1b59ee98a020fca739623c507928de0b0ccb0a74c45dc534387bddb881462849bfdf2aa0fc6673b7b3a0,
            ROW(CAST('146643802097887598924508253628676768' AS UINT256), CAST('306090984351009642184326301156697480' AS UINT256), CAST('104460289522589852792972896700796446' AS UINT256), CAST('617275257640808964503560882769288910' AS UINT256)),
            2
        ),
        -- random values with offset 3 bit  
        (
            0xb5ee9c7201010101004100007d3e387c31ffbcdf0ac01a8f0d64d87541e75e6e6c078dacf74c50107e539cb11e283c946f058665853a622ee29a1c3deedc40a31424dfef95507e3339dbd9d0,
            ROW(CAST('146643802097887598924508253628676768' AS UINT256), CAST('306090984351009642184326301156697480' AS UINT256), CAST('104460289522589852792972896700796446' AS UINT256), CAST('617275257640808964503560882769288910' AS UINT256)),
            3
        ),
        -- random values with offset 7 bit  
        (
            0xb5ee9c7201010101004100007d03e387c31ffbcdf0ac01a8f0d64d87541e75e6e6c078dacf74c50107e539cb11e283c946f058665853a622ee29a1c3deedc40a31424dfef95507e3339dbd9d,
            ROW(CAST('146643802097887598924508253628676768' AS UINT256), CAST('306090984351009642184326301156697480' AS UINT256), CAST('104460289522589852792972896700796446' AS UINT256), CAST('617275257640808964503560882769288910' AS UINT256)),
            7
        )
    )
    AS temp (boc, expected, offset)
), test_results AS (    
    SELECT {{ ton_from_boc('boc', [
    ton_begin_parse(),
    ton_skip_bits('offset'),
    ton_load_coins('value1'),
    ton_load_coins('value2'),
    ton_load_coins('value3'),
    ton_load_coins('value4'),
    ]) }} as result, expected 
    FROM test_data
)
SELECT result, expected FROM test_results
WHERE result != expected
version: 2

models:
  - name: tokens_optimism_erc20
    meta:
      blockchain: optimism
      sector: tokens
      project: erc20
      contributors: msilb7
    config:
      tags: ['table', 'erc20', 'optimism']
    description: "ERC20 Token Addresses, Symbols and Decimals"
    columns:
      - name: contract_address
        description: "ERC20 token contract address on Optimism"
        tests:
          - unique
      - name: symbol
        description: "ERC20 token symbol"
      - name: decimals
        description: "Number of decimals, refers to how divisible an ERC20 token can be"
      - name: token_type
        description: "Is this token a receipt (vault, LP, etc) token, or a lowest-level underlying token (i.e. USDC, DAI, OP)?"
      - name: token_mapping_source
        description: "The source of ERC20 Token Information (i.e. manual, contract factory)"
      - name: is_counted_in_tvl
        description: "Is this a token whose value we should count in total value calculations? (i.e. we don't want to double count value)"

  - name: tokens_optimism_nft
    meta:
      blockchain: optimism
      sector: nft
      contributors: msilb7, dot2dotseurat
    config:
      tags: ['tokens', 'optimism', 'nft', 'erc721', 'erc1155']
    description: >
        Selection of NFT token addresses.
    columns:
      - name: contract_address
        description: "The contract address is the unique address of where the NFTs are stored on Optimism."
        tests:
          - unique
      - name: name
        description: "NFT Project Name"

  - name: tokens_optimism_nft_bridged_mapping
    meta:
      blockchain: optimism
      sector: nft
      contributors: chuxin
    config:
      tags: ['tokens', 'optimism', 'nft', 'erc721','bridge']
    description: >
        Selection of NFT token addresses bridged from Ethereum to Optimism.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - contract_address
            - contract_address_l1
    columns:
      - name: category
        description: "Category of the NFT Project"
      - name: contract_address
        description: "The contract address is the unique address of where the NFTs are stored on Optimism."
      - name: name
        description: "NFT Project name"
      - name: standard
        description: "NFT Project standard, currently only erc721 tokens can be bridged"
      - name: symbol
        description: "NFT Project symbol"
      - name: contract_address_l1
        description: "Bridged project contract address on L1"

  - name: tokens_optimism_erc20_bridged_mapping
    meta:
      blockchain: optimism
      sector: erc20
      contributors: msilb7
    config:
      tags: ['tokens', 'optimism', 'bridge', 'erc20']
    description: >
        Selection of ERC20 token addresses bridged from Ethereum to Optimism.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - l1_token
            - l2_token
    columns:
      - name: l1_token
        description: "Token Address on L1"
      - name: l2_token
        description: "Token Address on L2"
      - name: l1_symbol
        description: "Token Symbol on L1, if it's in the ethereum erc20 tokens table"
      - name: l1_decimals
        description: "Token Decimals on L1, if it's in the ethereum erc20 tokens table"
  
  - name: tokens_optimism_erc20_stablecoins
    meta:
      blockchain: optimism
      sector: tokens
      project: erc20
      contributors: msilb7
    config:
      tags: [ 'table', 'erc20', 'stablecoins' ]
    description: "Optimism ERC20 Stablecoin Token Addresses, Symbols, Decimals, and Information"
    columns:
      - name: contract_address
        description: "ERC20 stablecoin token contract address"
        tests:
          - unique
          - not_null
      - name: symbol
        description: "ERC20 stablecoin token symbol"
      - name: decimals
        description: "Number of decimals, refers to how divisible an ERC20 stablecoin token can be"
      - name: name
        description: "ERC20 stablecoin token name"
      - name: currency_peg
        description: "What currency is the stablecoin pegged to"
      - &reserve_type
        name: reserve_type
        description: "What is the type of backing for the stablecoin"
        tests:
          - accepted_values:
              values: ['Crypto-Backed','Fiat-Backed','Algorithmic','Bridge-Backed']

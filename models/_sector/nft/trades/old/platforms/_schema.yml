version: 2

models:

  - name: nft_events_old
    meta:
      blockchain: ethereum, solana, bnb, optimism, arbitrum, polygon
      sector: nft
      contributors: 0xRob
    config:
      tags: [ 'nft', 'opensea', 'looksrare', 'x2y2', 'magiceden', 'sudoswap', 'foundation', 'element', 'zora', 'ethereum', 'bnb', 'solana', 'events', 'polygon', 'optimism', 'arbitrum', 'rarible', 'aavegotchi', 'oneplanet', 'fractal' ]
    description: >
      NFT events
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - unique_trade_id
            - blockchain
    columns:
      - &blockchain
        name: blockchain
        description: "Blockchain"
      - &project
        name: project
        description: "Project"
      - &version
        name: version
        description: "Project version"
      - &block_time
        name: block_time
        description: "UTC event block time"
      - &token_id
        name: token_id
        description: "NFT Token ID"
      - &collection
        name: collection
        description: "NFT collection name"
      - &amount_usd
        name: amount_usd
        description: "USD value of the trade at time of execution"
        tests:
          - dbt_utils.accepted_range:
              max_value: 1000000000 # $1b is an arbitrary number, intended to flag outlier amounts early
      - &token_standard
        name: token_standard
        description: "Token standard"
      - &trade_type
        name: trade_type
        description: "Identify whether it was a single NFT trade or multiple NFTs traded"
      - &number_of_items
        name: number_of_items
        description: "Number of items traded"
      - &trade_category
        name: trade_category
        description: "How was this NFT traded ? (Direct buy, auction, etc...)"
      - &evt_type
        name: evt_type
        description: "Event type (Trade, Mint, Burn)"
      - &seller
        name: seller
        description: "Seller wallet address"
      - &buyer
        name: buyer
        description: "Buyer wallet address"
      - &amount_original
        name: amount_original
        description: "Traded amount in original currency"
      - &amount_raw
        name: amount_raw
        description: "Traded amount in original currency before decimals correction"
      - &currency_symbol
        name: currency_symbol
        description: "Symbol of original currency used for payment"
      - &currency_contract
        name: currency_contract
        description: "Contract address of original token used for payment, with ETH contract address swapped for WETH"
      - &nft_contract_address
        name: nft_contract_address
        description: "NFT contract address, only if 1 nft was transacted"
      - &project_contract_address
        name: project_contract_address
        description: "Contract address used by the project, in this case wyvern contract"
      - &aggregator_name
        name: aggregator_name
        description: "If the trade was performed via an aggregator, displays aggregator name"
      - &aggregator_address
        name: aggregator_address
        description: "If the trade was performed via an aggregator, displays aggregator address"
      - &tx_hash
        name: tx_hash
        description: "Transaction hash"
      - &block_number
        name: block_number
        description: "Block number in which the transaction was executed "
      - &tx_from
        name: tx_from
        description: "Address that initiated the transaction"
      - &tx_to
        name: tx_to
        description: "Address that received the transaction"
      - &platform_fee_amount_raw
        name: platform_fee_amount_raw
        description: "Raw numerical amount for platform fees"
      - &platform_fee_amount
        name: platform_fee_amount
        description: "Platform fee amount in original token currency (properly formatted in decimals)"
      - &platform_fee_amount_usd
        name: platform_fee_amount_usd
        description: "Platform fee amount in USD"
      - &platform_fee_percentage
        name: platform_fee_percentage
        description: "Platform fee in % of the amount paid for a given trade"
      - &royalty_fee_receive_address
        name: royalty_fee_receive_address
        description: "Wallet addresses receiving fees from the transaction"
      - &royalty_fee_currency_symbol
        name: royalty_fee_currency_symbol
        description: "Symbol of the token in which fees are paid out"
      - &royalty_fee_amount_raw
        name: royalty_fee_amount_raw
        description: "Raw numerical amount for royalty fees"
      - &royalty_fee_amount
        name: royalty_fee_amount
        description: "Royalty fee amount in original token currency (properly formatted in decimals)"
      - &royalty_fee_amount_usd
        name: royalty_fee_amount_usd
        description: "Royalty fee amount in USD"
      - &royalty_fee_percentage
        name: royalty_fee_percentage
        description: "Royalty fee in % of the amount paid for a given trade"
      - &unique_trade_id
        name: unique_trade_id
        description: "Unique trade ID"
        tests:
          - unique

  - name: aavegotchi_polygon_events
    meta:
      blockchain: polygon
      project: aavegotchi
      contributors: springzh
    config:
      tags: ['polygon','aavegotchi','events']
    description: >
        Aavegotchi events on Polygon

  - name: element_avalanche_c_events
    meta:
      blockchain: avalanche_c
      project: element
      contributors: hildobby
    config:
      tags: [ 'avalanche_c','element','events' ]
    description: >
      Element events on Avalanche

  - name: element_bnb_events
    meta:
      blockchain: bnb
      project: element
      contributors: hildobby
    config:
      tags: [ 'bnb','element','events' ]
    description: >
      Element events on BNB

  - name: nftearth_optimism_events
    meta:
      blockchain: optimism
      project: nftearth
      contributors: chuxin
    config:
      tags: [ 'optimism','seaport','nftearth', events','chuxin' ]
    description: >
      NFTEarth Seaport events on Optimism.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - block_date
            - tx_hash
            - evt_index
            - nft_contract_address
            - token_id
            - sub_type
            - sub_idx
      - check_seed:
          seed_file: ref('nftearth_events_seed')
          filter:
            blockchain: optimism
            project: nftearth
            version: v1
          match_columns:
            - block_date
            - tx_hash
            - token_id
            - seller
            - evt_index
          check_columns:
            - buyer
            - nft_contract_address

  - name: oneplanet_polygon_events
    meta:
      blockchain: polygon
      project: oneplanet
      contributors: springzh
    config:
      tags: [ 'polygon','oneplanet','events','springzh' ]
    description: >
      OnePlanet events on Polygon

  - name: pancakeswap_bnb_nft_events
    meta:
      blockchain: bnb
      project: pancakeswap
      contributors: thb0301, 0xRob
    config:
      tags: [ 'bnb','pancakeswap','events' ]
    description: >
      Pancakeswap nft events on BNB smart chain
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - block_date
            - unique_trade_id
      - check_seed:
          seed_file: ref('pancakeswap_nft_trades_samples')
          match_columns:
            - block_time
            - tx_hash
            - token_id
          check_columns:
            - amount_original
            - buyer
            - seller

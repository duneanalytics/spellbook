version: 2

models:
  - name: nft_aggregators
    meta:
      blockchain: avalanche_c, bnb, ethereum, polygon
      sector: nft
      contributors: hildobby, soispoke
    config:
      tags: ['nft','aggregators', 'avalanche_c', 'bnb','ethereum', 'polygon']
    description: >
        NFT aggregators
    columns:
      - name: contract_address
        description: "Aggregator project's contract address"
      - name: name
        description: "Aggregator project's name"

  - name: nft_mints
    meta:
      blockchain: ethereum, solana, bnb, optimism, arbitrum, polygon
      sector: nft
      contributors: soispoke, hildobby, ilemi, 0xRob, cat, umer_h_adil
    config:
      tags: ['nft', 'opensea', 'looksrare', 'x2y2', 'magiceden', 'sudoswap', 'foundation', 'element', 'zora', 'ethereum', 'bnb', 'solana', 'events', 'polygon', 'optimism', 'arbitrum', 'rarible', 'aavegotchi', 'oneplanet', 'fractal']
    description: >
        NFT mints
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - unique_trade_id
            - blockchain
    columns:
      - &blockchain
        name: blockchain
        description: "Blockchain"
      - &project
        name: project
        description: "Project"
      - &version
        name: version
        description: "Project version"
      - &block_time
        name: block_time
        description: "UTC event block time"
      - &token_id
        name: token_id
        description: "NFT Token ID"
      - &collection
        name: collection
        description: "NFT collection name"
      - &amount_usd
        name: amount_usd
        description:  "USD value of the trade at time of execution"
        tests:
          - dbt_utils.accepted_range:
              max_value: 1000000000 # $1b is an arbitrary number, intended to flag outlier amounts early
      - &token_standard
        name: token_standard
        description:  "Token standard"
      - &trade_type
        name: trade_type
        description: "Identify whether it was a single NFT trade or multiple NFTs traded"
      - &number_of_items
        name: number_of_items
        description:  "Number of items traded"
      - &trade_category
        name: trade_category
        description:  "How was this NFT traded ? (Direct buy, auction, etc...)"
      - &evt_type
        name: evt_type
        description:  "Event type (Trade, Mint, Burn)"
      - &seller
        name: seller
        description:  "Seller wallet address"
      - &buyer
        name: buyer
        description:  "Buyer wallet address"
      - &amount_original
        name: amount_original
        description:  "Traded amount in original currency"
      - &amount_raw
        name: amount_raw
        description:   "Traded amount in original currency before decimals correction"
      - &currency_symbol
        name: currency_symbol
        description:  "Symbol of original currency used for payment"
      - &currency_contract
        name: currency_contract
        description:  "Contract address of original token used for payment, with ETH contract address swapped for WETH"
      - &nft_contract_address
        name: nft_contract_address
        description:  "NFT contract address, only if 1 nft was transacted"
      - &project_contract_address
        name: project_contract_address
        description:  "Contract address used by the project, in this case wyvern contract"
      - &aggregator_name
        name: aggregator_name
        description:  "If the trade was performed via an aggregator, displays aggregator name"
      - &aggregator_address
        name: aggregator_address
        description:  "If the trade was performed via an aggregator, displays aggregator address"
      - &tx_hash
        name: tx_hash
        description:  "Transaction hash"
      - &block_number
        name: block_number
        description: "Block number in which the transaction was executed "
      - &tx_from
        name: tx_from
        description:  "Address that initiated the transaction"
      - &tx_to
        name: tx_to
        description:  "Address that received the transaction"
      - &platform_fee_amount_raw
        name: platform_fee_amount_raw
        description:  "Raw numerical amount for platform fees"
      - &platform_fee_amount
        name: platform_fee_amount
        description:  "Platform fee amount in original token currency (properly formatted in decimals)"
      - &platform_fee_amount_usd
        name: platform_fee_amount_usd
        description:  "Platform fee amount in USD"
      - &platform_fee_percentage
        name: platform_fee_percentage
        description:  "Platform fee in % of the amount paid for a given trade"
      - &royalty_fee_receive_address
        name: royalty_fee_receive_address
        description:  "Wallet addresses receiving fees from the transaction"
      - &royalty_fee_currency_symbol
        name: royalty_fee_currency_symbol
        description: "Symbol of the token in which fees are paid out"
      - &royalty_fee_amount_raw
        name: royalty_fee_amount_raw
        description:  "Raw numerical amount for royalty fees"
      - &royalty_fee_amount
        name: royalty_fee_amount
        description:  "Royalty fee amount in original token currency (properly formatted in decimals)"
      - &royalty_fee_amount_usd
        name: royalty_fee_amount_usd
        description:  "Royalty fee amount in USD"
      - &royalty_fee_percentage
        name: royalty_fee_percentage
        description:  "Royalty fee in % of the amount paid for a given trade"
      - &unique_trade_id
        name: unique_trade_id
        description:  "Unique trade ID"

  - name: nft_wash_trades
    meta:
      blockchain: arbitrum, avalanche_c, bnb, ethereum, gnosis, optimism, polygon
      sector: nft
      contributors: hildobby
    config:
      tags: ['nft', 'opensea', 'looksrare', 'x2y2', 'magiceden', 'sudoswap', 'foundation', 'element', 'zora', 'arbitrum', 'avalanche_c', 'bnb', 'ethereum', 'gnosis', 'optimism', 'polygon', 'wash_trades']
    description: >
        NFT wash trades labelling
    columns:
      - *blockchain
      - *project
      - *version
      - *block_time
      - *token_id
      - *token_standard
      - *trade_category
      - *seller
      - *buyer
      - *nft_contract_address
      - *project_contract_address
      - *aggregator_name
      - *aggregator_address
      - *tx_hash
      - *block_number
      - *tx_from
      - *tx_to
      - name: unique_trade_id
        tests:
          - is_unique_filtered
      - &buyer_first_funded_by
        name: buyer_first_funded_by
        description: "Which wallet first funded the buyer's wallet in ETH"
      - &seller_first_funded_by
        name: seller_first_funded_by
        description: "Which wallet first funded the seller's wallet in ETH"
      - &filter_1_same_buyer_seller
        name: filter_1_same_buyer_seller
        description: "Were the seller and buyer the same address in the trade?"
      - &filter_2_back_and_forth_trade
        name: filter_2_back_and_forth_trade
        description: "Was the NFT ever traded the other way around (buyer<>seller)"
      - &filter_3_bought_or_sold_3x
        name: filter_3_bought_or_sold_3x
        description: "Was the same NFT bought 3+ times (Excluding ERC1155s)"
      - &filter_4_first_funded_by_same_wallet
        name: filter_4_first_funded_by_same_wallet
        description: "Did the same wallet first fund the seller and buyer's wallets in ETH?"
      - &filter_5_flashloan
        name: filter_5_flashloan
        description: "Did the tx include a flashloan?"
      - &is_wash_trade
        name: is_wash_trade
        description: "Have any of the filters flag as true? Then it is labelled as a wash trade"

  - name: nft_linked_addresses
    meta:
      blockchain: ethereum, solana
      sector: nft
      contributors: springzh, 0xRob
    config:
      tags: ['nft', 'opensea', 'looksrare', 'x2y2', 'magiceden', 'sudoswap', 'ethereum', 'solana', 'address']
    description: >
        NFT linked addresses. Addresses that buy and sell NFTs from each other. By definition (master address < alt address) alphabetically.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - blockchain
            - master_address
            - alternative_address
    columns:
      - *blockchain
      - name: master_address
        description: "Master address"
      - name: alternative_address
        description: "Alternative address"
      - name: last_interaction
        description: "block_time of the last trade between the pair"


  - name: nft_transfers
    meta:
      blockchain: ethereum, polygon, bnb, avalanche_c, gnosis, optimism, arbitrum, fantom, goerli
      sector: nft
      contributors: hildobby
    config:
      tags: ['nft', 'ethereum', 'polygon', 'bnb', 'avalanche_c', 'gnosis', 'optimism', 'arbitrum', 'fantom', 'goerli', 'transfers']
    description: >
        NFT transfers
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - blockchain
            - unique_transfer_id
    columns:
      - *blockchain
      - name: block_time
        description: "UTC event block time"
      - name: block_number
        description: "Block number in which the transaction was executed"
      - name: token_standard
        tests:
          - accepted_values:
              values: ['erc721', 'erc1155', 'bep721', 'bep1155']
        description: "Token standard"
      - name: transfer_type
        tests:
          - accepted_values:
              values: ['single', 'batch']
        description: "single or batch transfer of tokens"
      - name: evt_index
        description: "Event index"
      - name: contract_address
        description: "NFT contract address"
      - name: token_id
        description: "ID of transfered token(s)"
      - name: amount
        description: "Amount of transfered tokens"
      - name: from
        description: "Address that sent the token(s)"
      - name: to
        description: "Address that received the token(s)"
      - name: executed_by
        description: "Address that executed the transaction"
      - name: tx_hash
        description: "Transaction hash"
      - name: unique_transfer_id
        tests:
          - unique
        description: "Unique transfer ID"

  - name: nft_lending
    meta:
      blockchain: ethereum
      sector: nft
      contributors: Henrystats
    config:
      tags: ['ethereum','nft', 'lending']
    description: >
        nft lending events (repay & borrow)
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - block_date
            - blockchain
            - project
            - version
            - tx_hash
            - evt_index
    columns:
      - *blockchain
      - *project
      - *version
      - *block_time
      - &block_date
        name: block_date
        description: "UTC event block date"
      - *token_id
      - *collection
      - *amount_usd
      - *token_standard
      - *evt_type
      - &address
        name: address
        description:  "Address repaying or borrowing"
      - *amount_original
      - *amount_raw
      - &collateral_currency_symbol
        name: collateral_currency_symbol
        description:  "Symbol of collateral currency used for loan"
      - &collateral_currency_contract
        name: collateral_currency_contract
        description:  "Contract address of collateral currency used for loan"
      - *nft_contract_address
      - *project_contract_address
      - *tx_hash
      - *block_number
      - *tx_from
      - *tx_to
      - &evt_index
        name: evt_index
        description: "Index of the corresponding lending event"

  - name: nft_approvals
    meta:
      blockchain: ethereum, polygon, bnb, avalanche_c, gnosis, optimism, arbitrum, fantom, goerli
      sector: nft
      contributors: hildobby
    config:
      tags: ['nft', 'ethereum', 'polygon', 'bnb', 'avalanche_c', 'gnosis', 'optimism', 'arbitrum', 'fantom', 'goerli', 'approvals']
    description: >
        NFT approvals
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - blockchain
            - block_number
            - tx_hash
            - evt_index
    columns:
      - name: blockchain
        description: "Blockchain"
      - name: block_time
        description: "UTC event block time"
      - name: block_date
        description: "UTC event block date"
      - name: block_number
        description: "Block number in which the transaction was executed"
      - name: address
        description: "Address for which NFTs were approved"
      - name: token_standard
        tests:
          - accepted_values:
              values: ['erc721', 'erc1155']
      - name: approval_for_all
        description: "Was this an ApprovalForAll or a simple Approval?"
      - name: contract_address
        description: "Contract address"
      - name: token_id
        description: "NFT token ID"
      - name: approved
        description: "Approved"
      - name: tx_hash
        description: "Transaction hash"
      # - name: tx_from
      #   description: "Address that initiated the transaction"
      # - name: tx_to
      #   description: "Address that the transaction points to"
      - name: evt_index
        description: "Event index"

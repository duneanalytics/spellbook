version: 2

models:
  - name: cow_protocol_ethereum_solvers
    meta:
      blockchain: ethereum
      project: cow_protocol
      contributors: bh2smith, gentrexha
    config:
      tags: ['ethereum','cow_protocol','solver']
    description: >
        CoW Protocol solvers list on Ethereum
    columns:
      - &address
        name: address
        description: "Solver's wallet address"
      - &environment
        name: environment
        description: "Development environment"
      - &name
        name: name
        description: "Solver's name"
      - &active
        name: active
        description: "Solver's active status according to the events emitted by GPv2AllowListAuthentication. True if solver has been 'added' and not yet removed, False when the solver has been 'removed'."

  - name: cow_protocol_ethereum_batches
    meta:
      blockchain: ethereum
      project: cow_protocol
      contributors: bh2smith, gentrexha
    config:
      tags: ['ethereum','cow_protocol','trades', 'dex', 'aggregator', 'auction']
    description: >
      CoW Protocol enriched batches table on Ethereum
    columns:
      - *block_date
      - *block_number
      - *block_time
      - &num_trades
        name: num_trades
        description: Number of trades settled within the batch
      - &dex_swaps
        name: dex_swaps
        description: Number of AMM interactions used to settle the batch (Null when unknown)
      - &batch_value
        name: batch_value
        description: Total USD value of trades settled within the batch
      - &solver_address
        name: solver_address
        description: Ethereum address of solver settled batch (equivalent to tx.from)
      - *tx_hash
      - &gas_price
        name: gas_price
        description: Gas price (in WEI) of transaction
      - &gas_used
        name: gas_used
        description: Total/cumulative gas consumed (in WEI) to settle the batch
      - &tx_cost_usd
        name: tx_cost_usd
        description: USD cost of batch execution (gas_price * gas_used) / 1e18 * ETH price
      - &fee_value
        name: Total USD valuation of fees collected from all trades within the batch
      - &call_data_size
        name: call_data_size
        description: Size (in Kilobytes) of call data passed into the settle method.
      - &unwraps
        name: unwraps
        description: Number of WETH unwraps performed within the settlement
      - &token_approvals
        name: token_approvals
        description: Number of ERC20 token approvals made within the settlement

  - name: cow_protocol_ethereum_app_data
    meta:
      blockchain: ethereum
      project: cow_protocol
      contributors: bh2smith
    config:
      tags: ['ethereum','cow_protocol','app_data', "metadata"]
    description: >
      CoW Protocol App Data is JSON content stored on IPFS corresponding to order AppHash (cf. CoW Documentation https://docs.cow.fi/front-end/creating-app-ids).
    columns:
      - &app_hash
        name: app_hash
        description: Unique identifier of AppData published on-chain, used to fetch remaining content from IPFS. This can be recovered from call data provided to the Settlement Contracts `settle` method
      - &app_code
        name: app_code
        description: App Code is an indicator of where the order came from - primarily intended to be used for integration partners
      - *environment
      - &order_class
        name: order_class
        description: Enum flag indicating if an order was a market or limit order (can be Null)
      - &referrer
        name: referrer
        description: Ethereum address of referrer - used for tracking affiliate data (can be Null)
      - &slippage_bips
        name: slippage_bips
        description: User's slippage tolerance configured through the interface. Used to compute trade execution price improvement (can be Null)
      - &utm
        name: utm
        description: utm object associated with the app data (consisting of fields utmSource, utmContent and utmMedium)

  - name: cow_protocol_ethereum_order_rewards
    meta:
      blockchain: ethereum
      project: cow_protocol
      contributors: bh2smith
    config:
      tags: ['ethereum','cow_protocol','app_data', "metadata"]
    description: >
        Order Rewards (or more appropriately named Order Meta) contains off-chain meta data relevant 
        to the solver competition on the granularity level of orders.
    columns:
      - *tx_hash
      - &solver
        name: solver
        description: "Address of the solver who settled the order (i.e. the from address of the corresponding transaction)"
      - *block_number
      - &cow_reward
        name: cow_reward
        description: "COW token reward distributed to solver for settling order"
      - &surplus_fee
        name: surplus_fee
        description: "Fee taken from limit orders"
      - *order_uid
      - &quote_solver
        name: quote_solver
        description: "Address of the solver who provided the winning quote for this order"

  - name: cow_protocol_ethereum_eth_flow_orders
    meta:
      blockchain: ethereum
      project: cow_protocol
      contributors: bh2smith
    config:
      tags: ['ethereum','cow_protocol','eth-flow', "orders"]
    description: >
      ETHFlow enables the sale of Native ETH via CoW Protocol. This works essentially by placing an (onchain) order, 
      through the ETHFlow contract (https://github.com/cowprotocol/ethflowcontract) sending native which then wraps 
      the asset as an ERC20. The order is filled through this intermediary contract that uses ERC1271 signature 
      verification to place the order on the user's behalf.
    columns:
      - *block_date
      - *block_time
      - *block_number
      - *tx_hash
      - *environment
      - *valid_to
      - &quote_id
        name: quote_id
        description: Integer corresponding to the quote user was given in the interface.
      - &sell_amount
        name: sell_amount
        description: sell amount as part of the signed user order
      - *fee
      - &buy_amount
        name: buy_amount
        description: buy amount as part of the signed user order
      - *buy_token
      - *receiver
      - &sender
        name: sender
        description: sender of order placement transaction. Equivalent to "trader"
      - *app_hash
      - *order_uid

  - name: cow_protocol_ethereum_referrals
    meta:
      blockchain: ethereum
      project: cow_protocol
      contributors: bh2smith
    config:
      tags: ['ethereum','cow_protocol','affiliate', 'referrals']
    description: >
      The CoW Protocol Affiliate Program works based on referrals contained in AppData.
      A referral is considered valid whenever a new trader comes and places their first 
      order with referral address in the meta content. This table contains the relevant 
      query to build the affiliate mapping.
    columns:
      - *trader
      - *referrer

  - name: cow_protocol_ethereum_trade_slippage
    meta:
      blockchain: ethereum
      project: cow_protocol
      contributors: bh2smith, gentrexha, josojo
    config:
      tags: [ 'ethereum','cow_protocol','trade_slippage' ]
    description: >
      The query contains several measurements between the quoted price on cowswap and 
      the executed price. The price difference between the quote and the actual price 
      is called price improvement and is measured as percentage or in absolute dollars.
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - order_uid
            - block_number
    columns:
      - *order_uid
      - *block_time
      - *block_number
      - &buy_quote
        name: buy_quote
      - &sell_quote
        name: sell_quote
      - &tolerance_bips
        name: tolerance_bips
      - &trade_usd_value
        name: trade_usd_value
      - *fill_proportion
      - &amount_atoms
        name: amount_atoms
      - &amount_percentage
        name: amount_percentage
      - &amount_usd
        name: amount_usd

  - name: cow_protocol_ethereum_airdrop_claims
    meta:
      blockchain: ethereum
      sector: airdrop
      project: cow_protocol
      contributors: hildobby
    config:
      tags: ['table', 'airdrop', 'ethereum', 'claim', 'cow_protocol']
    description: "List of claim transactions for the $COW airdrop"
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - tx_hash
            - recipient
            - evt_index
    columns:
      - &blockchain
        name: blockchain
        description: "Blockchain"
      - *block_time
      - *block_number
      - &project
        name: project
        description: "Project name"
      - &airdrop_number
        name: airdrop_number
        description: "Airdrop identifier number"
      - &recipient
        name: recipient
        description: "Airdrop recipient"
      - &contract_address
        name: contract_address
        description: "Contract addressed used"
      - *tx_hash
      - name: amount_raw
        description: "Raw amount of tokens"
      - name: amount_original
        description: "Original amount of tokens"
      - name: amount_usd
        description: "USD value of tokens"
      - &token_address
        name: token_address
        description: "Token address"
      - &token_symbol
        name: token_symbol
        description: "Token symbol"
      - *evt_index

